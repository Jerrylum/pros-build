name: Test Entrypoint

on:
  push:
    tags: "v*"
    branches: "**"
  pull_request:
    branches: "**"

jobs:
  test-action:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        add_build_id: [always, except_tag, never]
        build_id: ["", "custom123"]
        make_success: [true, false]
        tag_ref: ["refs/tags/v1.0.0", "refs/heads/test"]

        include:
          - add_build_id: always
            version_answer: "1.0.0"
          - add_build_id: except_tag
            tag_ref: "refs/tags/v1.0.0"
            version_answer: "1.0.0"
          - add_build_id: except_tag
            tag_ref: "refs/heads/test"
            version_answer: "1.0.0+123456"
          - add_build_id: never
            version_answer: "1.0.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up test environment
        run: |
          echo "VERSION=1.0.0" > Makefile
          echo "LIBNAME=pros-template" >> Makefile
          if [ "${{ matrix.make_success }}" = "true" ]; then
            echo "all:\n\techo 'Build successful'" > Makefile
          else
            echo "all:\n\texit 1" > Makefile
          fi

      - name: Mock Run Entrypoint
        id: run
        run: |
          chmod +x ./entrypoint.sh
          ./entrypoint.sh
        env:
          INPUT_ADD_BUILD_ID: ${{ matrix.add_build_id }}
          INPUT_BUILD_ID: ${{ matrix.build_id }}
          INPUT_BUILD_ARGS: "all"
          GITHUB_SHA: "123456"
          GITHUB_REF: ${{ matrix.tag_ref }}

      - name: Check Outputs
        run: |
          echo "Version Core: ${{ steps.run.outputs.version_core }}"
          echo "Library Name: ${{ steps.run.outputs.library_name }}"
          echo "Version: ${{ steps.run.outputs.version }}"
          echo "Artifact Name: ${{ steps.run.outputs.artifact_name }}"
          echo "Artifact Path: ${{ steps.run.outputs.artifact_path }}"
          echo "Make Exit Code: ${{ steps.run.outputs.make_exit_code }}"
          if [ "${{ matrix.make_success }}" = "true" ]; then
            if [ "${{ steps.run.outputs.make_exit_code }}" -ne 0 ]; then
              echo "Expected make to succeed, but it failed."
              exit 1
            fi
          else
            if [ "${{ steps.run.outputs.make_exit_code }}" -eq 0 ]; then
              echo "Expected make to fail, but it succeeded."
              exit 1
            fi
          fi
          # check that the version is the same as the version_answer
          if [ "${{ steps.run.outputs.version }}" != "${{ matrix.version_answer }}" ]; then
            echo "Version does not match: ${{ steps.run.outputs.version }} != ${{ matrix.version_answer }}"
            exit 1
          fi
